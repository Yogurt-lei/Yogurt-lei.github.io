import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,b as t}from"./app.5eaf0eaa.js";const p={},e=t(`<h1 id="cpi-script" tabindex="-1"><a class="header-anchor" href="#cpi-script" aria-hidden="true">#</a> CPI Script</h1><h2 id="retry-logic-via-groovy" tabindex="-1"><a class="header-anchor" href="#retry-logic-via-groovy" aria-hidden="true">#</a> retry logic via groovy</h2><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code><span class="token keyword">import</span> com<span class="token punctuation">.</span>sap<span class="token punctuation">.</span>it<span class="token punctuation">.</span>api<span class="token punctuation">.</span>ITApiFactory
<span class="token keyword">import</span> com<span class="token punctuation">.</span>sap<span class="token punctuation">.</span>it<span class="token punctuation">.</span>api<span class="token punctuation">.</span>securestore<span class="token punctuation">.</span>SecureStoreService
<span class="token keyword">import</span> groovy<span class="token punctuation">.</span>json<span class="token punctuation">.</span>JsonSlurper

<span class="token keyword">import</span> com<span class="token punctuation">.</span>sap<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>ip<span class="token punctuation">.</span>core<span class="token punctuation">.</span>customdev<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Message
<span class="token keyword">import</span> com<span class="token punctuation">.</span>sap<span class="token punctuation">.</span>it<span class="token punctuation">.</span>api<span class="token punctuation">.</span>msglog<span class="token punctuation">.</span>MessageLog

<span class="token keyword">def</span> Message <span class="token function">processData</span><span class="token punctuation">(</span>Message message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">def</span> map <span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">getProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> ex <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;CamelExceptionCaught&#39;</span><span class="token punctuation">)</span>
    MessageLog messageLog <span class="token operator">=</span> messageLogFactory<span class="token punctuation">.</span><span class="token function">getMessageLog</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>ex <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        String exName <span class="token operator">=</span> ex<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCanonicalName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&#39;org.apache.camel.component.ahc.AhcOperationFailedException&#39;</span> <span class="token operator">==</span> exName
                <span class="token operator">||</span> <span class="token string">&#39;com.sap.it.rt.adapter.http.api.exception.HttpResponseException&#39;</span> <span class="token operator">==</span> exName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            message<span class="token punctuation">.</span><span class="token function">setBody</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getResponseBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            message<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;CamelHttpResponseCode&#39;</span><span class="token punctuation">,</span> ex<span class="token punctuation">.</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;java.util.concurrent.TimeoutException&quot;</span></span> <span class="token operator">==</span> ex<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCanonicalName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                message<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;needRetry&quot;</span></span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
                message<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;SAP_MessageProcessingLogCustomStatus&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;RETRY&quot;</span></span><span class="token punctuation">)</span>
                <span class="token comment">// 504 Gateway Timeout</span>
                message<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;CamelHttpResponseCode&#39;</span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;504&quot;</span></span><span class="token punctuation">)</span>
                <span class="token comment">//message.setBody(ex.getLocalizedMessage())</span>
        <span class="token comment">//resendToGateway(message)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> message
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">resendToGateway</span><span class="token punctuation">(</span>Message message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">def</span> propertyMap <span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">getProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    String credentialName <span class="token operator">=</span> propertyMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;credential_name&quot;</span></span><span class="token punctuation">)</span>
    SecureStoreService secureStoreService <span class="token operator">=</span> ITApiFactory<span class="token punctuation">.</span><span class="token function">getService</span><span class="token punctuation">(</span>SecureStoreService<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">def</span> token <span class="token operator">=</span> secureStoreService<span class="token punctuation">.</span><span class="token function">getUserCredential</span><span class="token punctuation">(</span>credentialName<span class="token punctuation">)</span>
    <span class="token keyword">def</span> clientId <span class="token operator">=</span> token<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> ClientSecret <span class="token operator">=</span> token<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> property <span class="token operator">=</span> token<span class="token punctuation">.</span><span class="token function">getCredentialProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> tokenUrl <span class="token operator">=</span> property<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;sec:server.url&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> clientAuth <span class="token operator">=</span> clientId <span class="token operator">+</span> <span class="token interpolation-string"><span class="token string">&quot;:&quot;</span></span> <span class="token operator">+</span> ClientSecret
    <span class="token keyword">def</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>tokenUrl <span class="token operator">+</span> <span class="token interpolation-string"><span class="token string">&quot;?grant_type=client_credentials&amp;response_type=token&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">openConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> HttpURLConnection
    request<span class="token punctuation">.</span><span class="token function">setRequestMethod</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;GET&quot;</span></span><span class="token punctuation">)</span>
    request<span class="token punctuation">.</span><span class="token function">setRequestProperty</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;Content-Type&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;application/json&quot;</span></span><span class="token punctuation">)</span>
    request<span class="token punctuation">.</span><span class="token function">setRequestProperty</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;Authorization&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;Basic &quot;</span></span> <span class="token operator">+</span> clientAuth<span class="token punctuation">.</span>bytes<span class="token punctuation">.</span><span class="token function">encodeBase64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getResponseCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">def</span> respBody <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">def</span> respBodyAsJson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JsonSlurper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parseText</span><span class="token punctuation">(</span>respBody<span class="token punctuation">)</span>
        <span class="token keyword">def</span> access_token <span class="token operator">=</span> respBodyAsJson<span class="token punctuation">.</span>access_token
        <span class="token keyword">def</span> token_type <span class="token operator">=</span> respBodyAsJson<span class="token punctuation">.</span>token_type
        <span class="token keyword">def</span> data_ingestion_host_address <span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;data_ingestion_host_address&quot;</span></span><span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token keyword">def</span> body <span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>

        <span class="token punctuation">(</span><span class="token punctuation">(</span>HttpURLConnection<span class="token punctuation">)</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>data_ingestion_host_address <span class="token operator">+</span> <span class="token interpolation-string"><span class="token string">&quot;/central/v1/sap/products/replication&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">openConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            connectTimeout <span class="token operator">=</span> <span class="token number">600000</span>
            readTimeout <span class="token operator">=</span> <span class="token number">600000</span>
            requestMethod <span class="token operator">=</span> <span class="token string">&#39;POST&#39;</span>
            doOutput <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token function">setRequestProperty</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;Content-Type&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;application/json&quot;</span></span><span class="token punctuation">)</span>
            <span class="token function">setRequestProperty</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;Datasource&quot;</span></span><span class="token punctuation">,</span> message<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;Datasource&quot;</span></span><span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">setRequestProperty</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;Objectname&quot;</span></span><span class="token punctuation">,</span> message<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;Objectname&quot;</span></span><span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">setRequestProperty</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;Rowcount&quot;</span></span><span class="token punctuation">,</span> message<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;Rowcount&quot;</span></span><span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">setRequestProperty</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;Authorization&quot;</span></span><span class="token punctuation">,</span> token_type <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> access_token<span class="token punctuation">)</span>
            outputStream<span class="token punctuation">.</span>withPrintWriter <span class="token punctuation">{</span> printWriter <span class="token operator">-&gt;</span>
                printWriter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">def</span> gwResult <span class="token operator">=</span> inputStream<span class="token punctuation">.</span>text
            message<span class="token punctuation">.</span><span class="token function">setBody</span><span class="token punctuation">(</span>gwResult<span class="token punctuation">)</span>
            message<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;CamelHttpResponseCode&#39;</span><span class="token punctuation">,</span> responseCode<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),o=[e];function c(i,u){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","script.html.vue"]]);export{r as default};
